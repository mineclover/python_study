'''
코니는 처음 위치 C에서 1초 후 1만큼 움직이고, 이후에는 가속이 붙어 매 초마다 이전 이동 거리 + 1만큼 움직인다. 즉 시간에 따른 코니의 위치는 C, C + 1, C + 3, C + 6, …이다.
브라운은 현재 위치 B에서 다음 순간 B – 1, B + 1, 2 * B 중 하나로 움직일 수 있다.
코니와 브라운의 위치 p는 조건 0 <= x <= 200,000을 만족한다.
브라운은 범위를 벗어나는 위치로는 이동할 수 없고, 코니가 범위를 벗어나면 게임이 끝난다.
  - 코니의 위치: 11 → 12 → 14 → 17 → 21 → 26
  - 브라운의 위치: 2 → 3 → 6 → 12 → 13 → 26
  - 브라운은 코니를 5초 만에 잡을 수 있다.


코니의 위치는 이동 거리 + 1 ,
C, C + 1, C + 3, C + 6
브라운  B – 1, B + 1, 2 * B 셋 중 하나

겹치는 시간 구하기?


'''


def solution(C, B):

    time = 0
    bigO = 0
    while True:

        bigO += time * 3

        C += time # 11, 12, 14, 17 , 21 ,26
        if C > 200000:
            print("200,000 도달", time)
            print(bigO)
            print(C)

            break
        #잡히는 경우의 수 600084
        #끝나는 C 값 200039
        #632에 200,000 도달함
        # 3 x n 임

        # #가짓수 넓혀? 진짜?? 진짜 200,000 까지 가게 해봐?


        time+=1

    result = 0
    return result


print(solution(11, 2))